% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BNP_BooleanToODE.R
\name{booleanToODE}
\alias{booleanToODE}
\title{Translate from Boolean Network to Continuous ODE Network.}
\usage{
booleanToODE(net, logic = "Zadeh", eq = "SQUAD", sep = ",",
  mutants = c(), keep.input = FALSE)
}
\arguments{
\item{net}{BoolNet network}

\item{logic}{is a character string specificating either if Zadeh or Probabilistic 
logic is employed during the translation. Default: Zadeh.}

\item{eq}{is a character string specificating either if the equation proposed 
by Sanchez-Corrales et al., 2010 or Villarreal et al., 2012 is employed by 
describe the rate of change for the nodes in the network.}

\item{sep}{between targets and factors in file, default ","}

\item{mutants}{list of genes to mutate, the derivate will be 0}

\item{keep.input}{if TRUE set the derivate of the inputs to 0}
}
\value{
Returns a list with func (ode function), parameters and example state and time.
        The parameters are a vector where h=10, w=0.5 and decay rate = 1.
}
\description{
The function translate the Boolean Network to a Determinist Continuous Network 
 composed by two principal parts. The first one containes the translation from 
 classic to fuzzy logic using one of two methods. The second one contains an 
 ODE-based description of the rate of changes for each of the nodes. 
IMPORTANT: This function call the perl script "ConvertTocontinuos.pl".
}
\examples{
library(deSolve)
data(cellcycle)

net.ode <- booleanToODE(cellcycle)
ode(func = net.ode$func, 
    parms = net.ode$parameters, 
    y = net.ode$state, 
    times = seq(0, 5, 0.1))

}
